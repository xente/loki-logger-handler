import traceback


class LoguruFormatter:
    """
    A custom formatter for log records generated by Loguru, formatting the record into a structured dictionary.
    """

    def format(self, record):
        """
        Format a Loguru log record into a structured dictionary.

        Args:
            record (dict): The Loguru log record to format.

        Returns:
            dict: A dictionary representation of the log record.
        """
        timestamp = record["time"].timestamp()

        formatted = {
            "message": record["message"],
            "timestamp": timestamp,
            "process": record["process"].id,
            "thread": record["thread"].id,
            "function": record["function"],
            "module": record["module"],
            "name": record["name"],
            "level": record["level"].name.upper(),
        }

        # Update with extra fields if available
        extra = record.get("extra", {})
        formatted.update(extra)

        loki_metadata = formatted.pop("loki_metadata", {})
        if not isinstance(loki_metadata, dict):
            loki_metadata = {}

        # 40 is for ERROR level in Loguru
        if record["level"].no >= 40:
            formatted["file"] = record["file"].name
            formatted["path"] = record["file"].path
            formatted["line"] = record["line"]
            self.add_exception_details(record, formatted)

        return formatted, loki_metadata

    @staticmethod
    def add_exception_details(record, formatted):
        """
        Adds exception details to the formatted log record.

        Args:
            record (dict): The log record containing log information.
            formatted (dict): The dictionary to which the formatted exception details will be added.
        """
        if record.get("exception"):
            exc_type, exc_value, exc_traceback = record["exception"]
            formatted_traceback = traceback.format_exception(
                exc_type, exc_value, exc_traceback
            )
            formatted["stacktrace"] = "".join(formatted_traceback)
